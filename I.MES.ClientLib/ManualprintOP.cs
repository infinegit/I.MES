//------------------------------------------------------------------------------
// <auto-generated>
//    MES团队制作，不得以任何原因手动变更当前文档
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using YFPO.MES.ClientCore;
using YFPO.MES.GlobalCore;
using YFPO.MES.Tools;
namespace YFPO.MES.Library
{
        public class ManualprintOP
        {
            private string Name = "YFPO.MES.Library.ManualprintOP, YFPO.MES.ServerLib, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null";
            public YFPO.MES.Models.OriginalData GetLoginInfor()
            {
                using (IChannel __channel = ChannelFactory.GetChannel())
                {
                    __channel.Open();
    
                    Compiler __compiler = new Compiler();
                    List<Parameters> __ps = new List<Parameters>();
                    
                    BaseInformation_I __info = new BaseInformation_I()
                    {
                        ClassName = this.Name,
                        FunctionName = "GetLoginInfor",
                        Parameters = __ps
                    };
    
                    ICombinator __combinator = new YFPO.MES.GlobalCore.Combinator.CSCombinator();
    
                    var __rtn = __channel.Send(__compiler.Compile(__combinator.Combination(__info)));
    
                    BaseInfomation_O __outInfo = new Resolver<BaseInfomation_O>().Resolve(__rtn);
    
                    if (__outInfo.Error == null)
                    {
                        
                        if (__outInfo.result == null)
                        {
                            return default(YFPO.MES.Models.OriginalData);
                        }
                        return (YFPO.MES.Models.OriginalData)(new Resolver(typeof(YFPO.MES.Models.OriginalData)).Resolve(__outInfo.result)); 
                    }
                    else
                    {
                        throw new MESException(1023, new Exception(__outInfo.Error));
                    }
                }
            }
            public YFPO.MES.Models.LGS_JISOrder GetJISInfor( System.String orderNo, System.Collections.Generic.List<YFPO.MES.Models.SYS_ExternalDeviceParam> ed)
            {
                using (IChannel __channel = ChannelFactory.GetChannel())
                {
                    __channel.Open();
    
                    Compiler __compiler = new Compiler();
                    List<Parameters> __ps = new List<Parameters>();
                    
                    __ps.Add(new Parameters(){Name = "orderNo", Value = __compiler.Compile(orderNo),TypeName = "System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",IsRef=false });
                    __ps.Add(new Parameters(){Name = "ed", Value = __compiler.Compile(ed),TypeName = "System.Collections.Generic.List`1[[YFPO.MES.Models.SYS_ExternalDeviceParam, YFPO.MES.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",IsRef=false });
                    BaseInformation_I __info = new BaseInformation_I()
                    {
                        ClassName = this.Name,
                        FunctionName = "GetJISInfor",
                        Parameters = __ps
                    };
    
                    ICombinator __combinator = new YFPO.MES.GlobalCore.Combinator.CSCombinator();
    
                    var __rtn = __channel.Send(__compiler.Compile(__combinator.Combination(__info)));
    
                    BaseInfomation_O __outInfo = new Resolver<BaseInfomation_O>().Resolve(__rtn);
    
                    if (__outInfo.Error == null)
                    {
                        
                        if (__outInfo.result == null)
                        {
                            return default(YFPO.MES.Models.LGS_JISOrder);
                        }
                        return (YFPO.MES.Models.LGS_JISOrder)(new Resolver(typeof(YFPO.MES.Models.LGS_JISOrder)).Resolve(__outInfo.result)); 
                    }
                    else
                    {
                        throw new MESException(1023, new Exception(__outInfo.Error));
                    }
                }
            }
            public System.Collections.Generic.List<YFPO.MES.Models.LGS_JISOrder> GetJISInfor( System.DateTime time, System.DateTime time1, System.Collections.Generic.List<YFPO.MES.Models.SYS_ExternalDeviceParam> ed)
            {
                using (IChannel __channel = ChannelFactory.GetChannel())
                {
                    __channel.Open();
    
                    Compiler __compiler = new Compiler();
                    List<Parameters> __ps = new List<Parameters>();
                    
                    __ps.Add(new Parameters(){Name = "time", Value = __compiler.Compile(time),TypeName = "System.DateTime, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",IsRef=false });
                    __ps.Add(new Parameters(){Name = "time1", Value = __compiler.Compile(time1),TypeName = "System.DateTime, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",IsRef=false });
                    __ps.Add(new Parameters(){Name = "ed", Value = __compiler.Compile(ed),TypeName = "System.Collections.Generic.List`1[[YFPO.MES.Models.SYS_ExternalDeviceParam, YFPO.MES.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",IsRef=false });
                    BaseInformation_I __info = new BaseInformation_I()
                    {
                        ClassName = this.Name,
                        FunctionName = "GetJISInfor",
                        Parameters = __ps
                    };
    
                    ICombinator __combinator = new YFPO.MES.GlobalCore.Combinator.CSCombinator();
    
                    var __rtn = __channel.Send(__compiler.Compile(__combinator.Combination(__info)));
    
                    BaseInfomation_O __outInfo = new Resolver<BaseInfomation_O>().Resolve(__rtn);
    
                    if (__outInfo.Error == null)
                    {
                        
                        if (__outInfo.result == null)
                        {
                            return default(System.Collections.Generic.List<YFPO.MES.Models.LGS_JISOrder>);
                        }
                        return (System.Collections.Generic.List<YFPO.MES.Models.LGS_JISOrder>)(new Resolver(typeof(System.Collections.Generic.List<YFPO.MES.Models.LGS_JISOrder>)).Resolve(__outInfo.result)); 
                    }
                    else
                    {
                        throw new MESException(1023, new Exception(__outInfo.Error));
                    }
                }
            }
            public System.Collections.Generic.List<YFPO.MES.Models.SYS_ExternalDeviceParam> GetExternalDeviceParam( System.String deviceID, System.String inOutMode)
            {
                using (IChannel __channel = ChannelFactory.GetChannel())
                {
                    __channel.Open();
    
                    Compiler __compiler = new Compiler();
                    List<Parameters> __ps = new List<Parameters>();
                    
                    __ps.Add(new Parameters(){Name = "deviceID", Value = __compiler.Compile(deviceID),TypeName = "System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",IsRef=false });
                    __ps.Add(new Parameters(){Name = "inOutMode", Value = __compiler.Compile(inOutMode),TypeName = "System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",IsRef=false });
                    BaseInformation_I __info = new BaseInformation_I()
                    {
                        ClassName = this.Name,
                        FunctionName = "GetExternalDeviceParam",
                        Parameters = __ps
                    };
    
                    ICombinator __combinator = new YFPO.MES.GlobalCore.Combinator.CSCombinator();
    
                    var __rtn = __channel.Send(__compiler.Compile(__combinator.Combination(__info)));
    
                    BaseInfomation_O __outInfo = new Resolver<BaseInfomation_O>().Resolve(__rtn);
    
                    if (__outInfo.Error == null)
                    {
                        
                        if (__outInfo.result == null)
                        {
                            return default(System.Collections.Generic.List<YFPO.MES.Models.SYS_ExternalDeviceParam>);
                        }
                        return (System.Collections.Generic.List<YFPO.MES.Models.SYS_ExternalDeviceParam>)(new Resolver(typeof(System.Collections.Generic.List<YFPO.MES.Models.SYS_ExternalDeviceParam>)).Resolve(__outInfo.result)); 
                    }
                    else
                    {
                        throw new MESException(1023, new Exception(__outInfo.Error));
                    }
                }
            }
            public System.String printPDFFile( System.String fileNameWithPath)
            {
                using (IChannel __channel = ChannelFactory.GetChannel())
                {
                    __channel.Open();
    
                    Compiler __compiler = new Compiler();
                    List<Parameters> __ps = new List<Parameters>();
                    
                    __ps.Add(new Parameters(){Name = "fileNameWithPath", Value = __compiler.Compile(fileNameWithPath),TypeName = "System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",IsRef=false });
                    BaseInformation_I __info = new BaseInformation_I()
                    {
                        ClassName = this.Name,
                        FunctionName = "printPDFFile",
                        Parameters = __ps
                    };
    
                    ICombinator __combinator = new YFPO.MES.GlobalCore.Combinator.CSCombinator();
    
                    var __rtn = __channel.Send(__compiler.Compile(__combinator.Combination(__info)));
    
                    BaseInfomation_O __outInfo = new Resolver<BaseInfomation_O>().Resolve(__rtn);
    
                    if (__outInfo.Error == null)
                    {
                        
                        if (__outInfo.result == null)
                        {
                            return default(System.String);
                        }
                        return (System.String)(new Resolver(typeof(System.String)).Resolve(__outInfo.result)); 
                    }
                    else
                    {
                        throw new MESException(1023, new Exception(__outInfo.Error));
                    }
                }
            }
            public System.Boolean Login( System.String userName, System.String password, System.String LoginUrl)
            {
                using (IChannel __channel = ChannelFactory.GetChannel())
                {
                    __channel.Open();
    
                    Compiler __compiler = new Compiler();
                    List<Parameters> __ps = new List<Parameters>();
                    
                    __ps.Add(new Parameters(){Name = "userName", Value = __compiler.Compile(userName),TypeName = "System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",IsRef=false });
                    __ps.Add(new Parameters(){Name = "password", Value = __compiler.Compile(password),TypeName = "System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",IsRef=false });
                    __ps.Add(new Parameters(){Name = "LoginUrl", Value = __compiler.Compile(LoginUrl),TypeName = "System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",IsRef=false });
                    BaseInformation_I __info = new BaseInformation_I()
                    {
                        ClassName = this.Name,
                        FunctionName = "Login",
                        Parameters = __ps
                    };
    
                    ICombinator __combinator = new YFPO.MES.GlobalCore.Combinator.CSCombinator();
    
                    var __rtn = __channel.Send(__compiler.Compile(__combinator.Combination(__info)));
    
                    BaseInfomation_O __outInfo = new Resolver<BaseInfomation_O>().Resolve(__rtn);
    
                    if (__outInfo.Error == null)
                    {
                        
                        if (__outInfo.result == null)
                        {
                            return default(System.Boolean);
                        }
                        return (System.Boolean)(new Resolver(typeof(System.Boolean)).Resolve(__outInfo.result)); 
                    }
                    else
                    {
                        throw new MESException(1023, new Exception(__outInfo.Error));
                    }
                }
            }
            public System.String DownFileByPage( System.String deliveryNo, System.String partnerCode, System.String pathUr)
            {
                using (IChannel __channel = ChannelFactory.GetChannel())
                {
                    __channel.Open();
    
                    Compiler __compiler = new Compiler();
                    List<Parameters> __ps = new List<Parameters>();
                    
                    __ps.Add(new Parameters(){Name = "deliveryNo", Value = __compiler.Compile(deliveryNo),TypeName = "System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",IsRef=false });
                    __ps.Add(new Parameters(){Name = "partnerCode", Value = __compiler.Compile(partnerCode),TypeName = "System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",IsRef=false });
                    __ps.Add(new Parameters(){Name = "pathUr", Value = __compiler.Compile(pathUr),TypeName = "System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",IsRef=false });
                    BaseInformation_I __info = new BaseInformation_I()
                    {
                        ClassName = this.Name,
                        FunctionName = "DownFileByPage",
                        Parameters = __ps
                    };
    
                    ICombinator __combinator = new YFPO.MES.GlobalCore.Combinator.CSCombinator();
    
                    var __rtn = __channel.Send(__compiler.Compile(__combinator.Combination(__info)));
    
                    BaseInfomation_O __outInfo = new Resolver<BaseInfomation_O>().Resolve(__rtn);
    
                    if (__outInfo.Error == null)
                    {
                        
                        if (__outInfo.result == null)
                        {
                            return default(System.String);
                        }
                        return (System.String)(new Resolver(typeof(System.String)).Resolve(__outInfo.result)); 
                    }
                    else
                    {
                        throw new MESException(1023, new Exception(__outInfo.Error));
                    }
                }
            }
            public System.Collections.Generic.List<YFPO.MES.Models.NIOJitOutIns> ParsingHtml( System.String html)
            {
                using (IChannel __channel = ChannelFactory.GetChannel())
                {
                    __channel.Open();
    
                    Compiler __compiler = new Compiler();
                    List<Parameters> __ps = new List<Parameters>();
                    
                    __ps.Add(new Parameters(){Name = "html", Value = __compiler.Compile(html),TypeName = "System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",IsRef=false });
                    BaseInformation_I __info = new BaseInformation_I()
                    {
                        ClassName = this.Name,
                        FunctionName = "ParsingHtml",
                        Parameters = __ps
                    };
    
                    ICombinator __combinator = new YFPO.MES.GlobalCore.Combinator.CSCombinator();
    
                    var __rtn = __channel.Send(__compiler.Compile(__combinator.Combination(__info)));
    
                    BaseInfomation_O __outInfo = new Resolver<BaseInfomation_O>().Resolve(__rtn);
    
                    if (__outInfo.Error == null)
                    {
                        
                        if (__outInfo.result == null)
                        {
                            return default(System.Collections.Generic.List<YFPO.MES.Models.NIOJitOutIns>);
                        }
                        return (System.Collections.Generic.List<YFPO.MES.Models.NIOJitOutIns>)(new Resolver(typeof(System.Collections.Generic.List<YFPO.MES.Models.NIOJitOutIns>)).Resolve(__outInfo.result)); 
                    }
                    else
                    {
                        throw new MESException(1023, new Exception(__outInfo.Error));
                    }
                }
            }
            public YFPO.MES.Models.NIOJitOutIns ParsingDetHtml( System.String html, YFPO.MES.Models.NIOJitOutIns outIns)
            {
                using (IChannel __channel = ChannelFactory.GetChannel())
                {
                    __channel.Open();
    
                    Compiler __compiler = new Compiler();
                    List<Parameters> __ps = new List<Parameters>();
                    
                    __ps.Add(new Parameters(){Name = "html", Value = __compiler.Compile(html),TypeName = "System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",IsRef=false });
                    __ps.Add(new Parameters(){Name = "outIns", Value = __compiler.Compile(outIns),TypeName = "YFPO.MES.Models.NIOJitOutIns, YFPO.MES.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null",IsRef=false });
                    BaseInformation_I __info = new BaseInformation_I()
                    {
                        ClassName = this.Name,
                        FunctionName = "ParsingDetHtml",
                        Parameters = __ps
                    };
    
                    ICombinator __combinator = new YFPO.MES.GlobalCore.Combinator.CSCombinator();
    
                    var __rtn = __channel.Send(__compiler.Compile(__combinator.Combination(__info)));
    
                    BaseInfomation_O __outInfo = new Resolver<BaseInfomation_O>().Resolve(__rtn);
    
                    if (__outInfo.Error == null)
                    {
                        
                        if (__outInfo.result == null)
                        {
                            return default(YFPO.MES.Models.NIOJitOutIns);
                        }
                        return (YFPO.MES.Models.NIOJitOutIns)(new Resolver(typeof(YFPO.MES.Models.NIOJitOutIns)).Resolve(__outInfo.result)); 
                    }
                    else
                    {
                        throw new MESException(1023, new Exception(__outInfo.Error));
                    }
                }
            }
            public System.String GetGUID()
            {
                using (IChannel __channel = ChannelFactory.GetChannel())
                {
                    __channel.Open();
    
                    Compiler __compiler = new Compiler();
                    List<Parameters> __ps = new List<Parameters>();
                    
                    BaseInformation_I __info = new BaseInformation_I()
                    {
                        ClassName = this.Name,
                        FunctionName = "GetGUID",
                        Parameters = __ps
                    };
    
                    ICombinator __combinator = new YFPO.MES.GlobalCore.Combinator.CSCombinator();
    
                    var __rtn = __channel.Send(__compiler.Compile(__combinator.Combination(__info)));
    
                    BaseInfomation_O __outInfo = new Resolver<BaseInfomation_O>().Resolve(__rtn);
    
                    if (__outInfo.Error == null)
                    {
                        
                        if (__outInfo.result == null)
                        {
                            return default(System.String);
                        }
                        return (System.String)(new Resolver(typeof(System.String)).Resolve(__outInfo.result)); 
                    }
                    else
                    {
                        throw new MESException(1023, new Exception(__outInfo.Error));
                    }
                }
            }
            public System.String InsertJisOrder( YFPO.MES.Models.LGS_JISOrder order)
            {
                using (IChannel __channel = ChannelFactory.GetChannel())
                {
                    __channel.Open();
    
                    Compiler __compiler = new Compiler();
                    List<Parameters> __ps = new List<Parameters>();
                    
                    __ps.Add(new Parameters(){Name = "order", Value = __compiler.Compile(order),TypeName = "YFPO.MES.Models.LGS_JISOrder, YFPO.MES.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null",IsRef=false });
                    BaseInformation_I __info = new BaseInformation_I()
                    {
                        ClassName = this.Name,
                        FunctionName = "InsertJisOrder",
                        Parameters = __ps
                    };
    
                    ICombinator __combinator = new YFPO.MES.GlobalCore.Combinator.CSCombinator();
    
                    var __rtn = __channel.Send(__compiler.Compile(__combinator.Combination(__info)));
    
                    BaseInfomation_O __outInfo = new Resolver<BaseInfomation_O>().Resolve(__rtn);
    
                    if (__outInfo.Error == null)
                    {
                        
                        if (__outInfo.result == null)
                        {
                            return default(System.String);
                        }
                        return (System.String)(new Resolver(typeof(System.String)).Resolve(__outInfo.result)); 
                    }
                    else
                    {
                        throw new MESException(1023, new Exception(__outInfo.Error));
                    }
                }
            }
            public System.String InsertJisOrderDet( YFPO.MES.Models.LGS_JISOrderDet det)
            {
                using (IChannel __channel = ChannelFactory.GetChannel())
                {
                    __channel.Open();
    
                    Compiler __compiler = new Compiler();
                    List<Parameters> __ps = new List<Parameters>();
                    
                    __ps.Add(new Parameters(){Name = "det", Value = __compiler.Compile(det),TypeName = "YFPO.MES.Models.LGS_JISOrderDet, YFPO.MES.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null",IsRef=false });
                    BaseInformation_I __info = new BaseInformation_I()
                    {
                        ClassName = this.Name,
                        FunctionName = "InsertJisOrderDet",
                        Parameters = __ps
                    };
    
                    ICombinator __combinator = new YFPO.MES.GlobalCore.Combinator.CSCombinator();
    
                    var __rtn = __channel.Send(__compiler.Compile(__combinator.Combination(__info)));
    
                    BaseInfomation_O __outInfo = new Resolver<BaseInfomation_O>().Resolve(__rtn);
    
                    if (__outInfo.Error == null)
                    {
                        
                        if (__outInfo.result == null)
                        {
                            return default(System.String);
                        }
                        return (System.String)(new Resolver(typeof(System.String)).Resolve(__outInfo.result)); 
                    }
                    else
                    {
                        throw new MESException(1023, new Exception(__outInfo.Error));
                    }
                }
            }
            public YFPO.MES.Models.MmToMesData GetOtherData( System.String custPartNo, System.Boolean falg, System.Collections.Generic.List<YFPO.MES.Models.SYS_ExternalDeviceParam> ed)
            {
                using (IChannel __channel = ChannelFactory.GetChannel())
                {
                    __channel.Open();
    
                    Compiler __compiler = new Compiler();
                    List<Parameters> __ps = new List<Parameters>();
                    
                    __ps.Add(new Parameters(){Name = "custPartNo", Value = __compiler.Compile(custPartNo),TypeName = "System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",IsRef=false });
                    __ps.Add(new Parameters(){Name = "falg", Value = __compiler.Compile(falg),TypeName = "System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",IsRef=false });
                    __ps.Add(new Parameters(){Name = "ed", Value = __compiler.Compile(ed),TypeName = "System.Collections.Generic.List`1[[YFPO.MES.Models.SYS_ExternalDeviceParam, YFPO.MES.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",IsRef=false });
                    BaseInformation_I __info = new BaseInformation_I()
                    {
                        ClassName = this.Name,
                        FunctionName = "GetOtherData",
                        Parameters = __ps
                    };
    
                    ICombinator __combinator = new YFPO.MES.GlobalCore.Combinator.CSCombinator();
    
                    var __rtn = __channel.Send(__compiler.Compile(__combinator.Combination(__info)));
    
                    BaseInfomation_O __outInfo = new Resolver<BaseInfomation_O>().Resolve(__rtn);
    
                    if (__outInfo.Error == null)
                    {
                        
                        if (__outInfo.result == null)
                        {
                            return default(YFPO.MES.Models.MmToMesData);
                        }
                        return (YFPO.MES.Models.MmToMesData)(new Resolver(typeof(YFPO.MES.Models.MmToMesData)).Resolve(__outInfo.result)); 
                    }
                    else
                    {
                        throw new MESException(1023, new Exception(__outInfo.Error));
                    }
                }
            }
            public void MoveFolder( System.String sourcePath, System.String destPath, System.String deliveryNo)
            {
                using (IChannel __channel = ChannelFactory.GetChannel())
                {
                    __channel.Open();
    
                    Compiler __compiler = new Compiler();
                    List<Parameters> __ps = new List<Parameters>();
                    
                    __ps.Add(new Parameters(){Name = "sourcePath", Value = __compiler.Compile(sourcePath),TypeName = "System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",IsRef=false });
                    __ps.Add(new Parameters(){Name = "destPath", Value = __compiler.Compile(destPath),TypeName = "System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",IsRef=false });
                    __ps.Add(new Parameters(){Name = "deliveryNo", Value = __compiler.Compile(deliveryNo),TypeName = "System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",IsRef=false });
                    BaseInformation_I __info = new BaseInformation_I()
                    {
                        ClassName = this.Name,
                        FunctionName = "MoveFolder",
                        Parameters = __ps
                    };
    
                    ICombinator __combinator = new YFPO.MES.GlobalCore.Combinator.CSCombinator();
    
                    var __rtn = __channel.Send(__compiler.Compile(__combinator.Combination(__info)));
    
                    BaseInfomation_O __outInfo = new Resolver<BaseInfomation_O>().Resolve(__rtn);
    
                    if (__outInfo.Error == null)
                    {
                        
                        //if (__outInfo.result == null)
                        //{
                        //    return default(void);
                        //}
                        //return (void)(new Resolver(typeof(void)).Resolve(__outInfo.result)); 
                    }
                    else
                    {
                        throw new MESException(1023, new Exception(__outInfo.Error));
                    }
                }
            }
            public void ExecuteSqlTran( System.Collections.ArrayList SQLStringList)
            {
                using (IChannel __channel = ChannelFactory.GetChannel())
                {
                    __channel.Open();
    
                    Compiler __compiler = new Compiler();
                    List<Parameters> __ps = new List<Parameters>();
                    
                    __ps.Add(new Parameters(){Name = "SQLStringList", Value = __compiler.Compile(SQLStringList),TypeName = "System.Collections.ArrayList, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",IsRef=false });
                    BaseInformation_I __info = new BaseInformation_I()
                    {
                        ClassName = this.Name,
                        FunctionName = "ExecuteSqlTran",
                        Parameters = __ps
                    };
    
                    ICombinator __combinator = new YFPO.MES.GlobalCore.Combinator.CSCombinator();
    
                    var __rtn = __channel.Send(__compiler.Compile(__combinator.Combination(__info)));
    
                    BaseInfomation_O __outInfo = new Resolver<BaseInfomation_O>().Resolve(__rtn);
    
                    if (__outInfo.Error == null)
                    {
                        
                        //if (__outInfo.result == null)
                        //{
                        //    return default(void);
                        //}
                        //return (void)(new Resolver(typeof(void)).Resolve(__outInfo.result)); 
                    }
                    else
                    {
                        throw new MESException(1023, new Exception(__outInfo.Error));
                    }
                }
            }
            public void ExecuteSqlTran1( System.Collections.ArrayList SQLStringList, System.Collections.Generic.List<YFPO.MES.Models.SYS_ExternalDeviceParam> ed)
            {
                using (IChannel __channel = ChannelFactory.GetChannel())
                {
                    __channel.Open();
    
                    Compiler __compiler = new Compiler();
                    List<Parameters> __ps = new List<Parameters>();
                    
                    __ps.Add(new Parameters(){Name = "SQLStringList", Value = __compiler.Compile(SQLStringList),TypeName = "System.Collections.ArrayList, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",IsRef=false });
                    __ps.Add(new Parameters(){Name = "ed", Value = __compiler.Compile(ed),TypeName = "System.Collections.Generic.List`1[[YFPO.MES.Models.SYS_ExternalDeviceParam, YFPO.MES.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",IsRef=false });
                    BaseInformation_I __info = new BaseInformation_I()
                    {
                        ClassName = this.Name,
                        FunctionName = "ExecuteSqlTran1",
                        Parameters = __ps
                    };
    
                    ICombinator __combinator = new YFPO.MES.GlobalCore.Combinator.CSCombinator();
    
                    var __rtn = __channel.Send(__compiler.Compile(__combinator.Combination(__info)));
    
                    BaseInfomation_O __outInfo = new Resolver<BaseInfomation_O>().Resolve(__rtn);
    
                    if (__outInfo.Error == null)
                    {
                        
                        //if (__outInfo.result == null)
                        //{
                        //    return default(void);
                        //}
                        //return (void)(new Resolver(typeof(void)).Resolve(__outInfo.result)); 
                    }
                    else
                    {
                        throw new MESException(1023, new Exception(__outInfo.Error));
                    }
                }
            }
        }
}
