//------------------------------------------------------------------------------
// <auto-generated>
//    MES团队制作，不得以任何原因手动变更当前文档
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using I.MES.ClientCore;
using I.MES.GlobalCore;
using I.MES.Tools;
namespace I.MES.Library
{
        public class RoleScanSitePrivOP
        {
            private string Name = "I.MES.Library.RoleScanSitePrivOP, I.MES.ServerLib, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null";
            public System.Collections.Generic.List<I.MES.Models.SYS_Role> GetAllRoleList()
            {
                using (IChannel __channel = ChannelFactory.GetChannel())
                {
                    __channel.Open();
    
                    Compiler __compiler = new Compiler();
                    List<Parameters> __ps = new List<Parameters>();
                    
                    BaseInformation_I __info = new BaseInformation_I()
                    {
                        ClassName = this.Name,
                        FunctionName = "GetAllRoleList",
                        Parameters = __ps
                    };
    
                    ICombinator __combinator = new I.MES.GlobalCore.Combinator.CSCombinator();
    
                    var __rtn = __channel.Send(__compiler.Compile(__combinator.Combination(__info)));
    
                    BaseInfomation_O __outInfo = new Resolver<BaseInfomation_O>().Resolve(__rtn);
    
                    if (__outInfo.Error == null)
                    {
                        
                        if (__outInfo.result == null)
                        {
                            return default(System.Collections.Generic.List<I.MES.Models.SYS_Role>);
                        }
                        return (System.Collections.Generic.List<I.MES.Models.SYS_Role>)(new Resolver(typeof(System.Collections.Generic.List<I.MES.Models.SYS_Role>)).Resolve(__outInfo.result)); 
                    }
                    else
                    {
                        throw new MESException(__outInfo.ErrorCode, new Exception(__outInfo.Error));
                    }
                }
            }
        }
}
